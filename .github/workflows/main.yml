name: Deploy to EC2
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - run: |
          chmod +x gradlew
          ./gradlew build test

      - uses: actions/upload-artifact@v4
        with:
          name: configservice-jar
          path: build/libs/*.jar

      - uses: actions/download-artifact@v4
        with:
          name: configservice-jar
          path: ./

      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "./*.jar"
          target: "/opt/tata/configservice/"

      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /opt/tata/configservice
            JAR_FILE=$(ls configservice-v*.jar | sort -V | tail -n 1)
            [ -f Dockerfile ] && [ -n "$JAR_FILE" ] || exit 1
            
            cp "$JAR_FILE" configservice.jar
            
            docker stop configservice 2>/dev/null || true
            docker rm configservice 2>/dev/null || true
            
            docker build -t configservice . 
            docker run -d --name configservice -p 8888:8888 configservice
            
            docker ps | grep configservice || { 
                docker ps -a | grep configservice
                docker logs configservice
                exit 1
            }